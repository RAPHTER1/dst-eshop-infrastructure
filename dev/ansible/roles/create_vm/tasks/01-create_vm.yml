---
- name: Copier le script create_vm.sh sur le serveur Proxmox
  copy:
    src: create_vm.sh
    dest: /tmp/create_vm.sh
    mode: '0755'

- name: Copier le fichier vm.json  sur le serveur Proxmox
  copy:
    src: vm.json
    dest: /tmp/vm.json
    mode: '0644'

- name: Exécuter le script create_vm.sh avec le fichier vm.json
  shell: bash /tmp/create_vm.sh
  args:
    chdir: /tmp
  register: result_create_vm
  changed_when: "'VM_ALREADY_EXISTS' not in result_create_vm.stdout"
  failed_when: result_create_vm.rc not in [0,2]

- name: Afficher la sortie du script
  debug:
    var: result_create_vm.stdout_lines

- name: "Info : VM déjà existante, poursuite du setup MicroK8s"
  debug:
    msg: "La VM {{ VM_ID }} existe déjà. Le playbook poursuit l'installation de MicroK8s."
  when: "'VM_ALREADY_EXISTS' in result_create_vm.stdout"

- name: Lire la liste des VMs provisionnées
  set_fact:
    provisioned_vms: "{{ lookup('file', '/tmp/provisioned_vms.json') | from_json }}"

- name: Ajouter chaque VM à l’inventaire dynamique
  add_host:
    name: "{{ item.vm_name }}"
    ansible_host: "{{ item.vm_ip }}"
    ansible_user: ubuntu
    ansible_ssh_private_key_file: "{{ k8s_proxmox_private_key_file }}"
  loop: "{{ provisioned_vms }}"
  when: item.vm_ip is defined

# Ici j'ai quand même un problème car je ne vérifie pas si la VM e VM_ID est vraiment celle que je veux mais pour le moment on laisse comme ca.
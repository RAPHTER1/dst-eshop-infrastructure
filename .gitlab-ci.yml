stages:
  - provision

image: debian:12-slim

variables:
   ANSIBLE_HOST_KEY_CHECKING: "false"
   ANSIBLE_CONFIG: "$CI_PROJECT_DIR/dev/ansible/ansible.cfg"

before_script:
  # 🧼 Préparation système minimale
  - apt-get update -qy
  - apt-get install -qy --no-install-recommends openssh-client git gettext file python3-pip

  # 🐍 Installer le module Python `kubernetes` (nécessaire pour le rôle)
  - export PIP_BREAK_SYSTEM_PACKAGES=1
  - pip install --no-cache-dir --user ansible-core==2.14.0
  - pip install --no-cache-dir --user kubernetes
  - export PATH="$HOME/.local/bin:$PATH"
  - cd dev/ansible

  # 2) On prépare ~/.ssh
  - mkdir -p ~/.ssh && chmod 700 ~/.ssh
  # On importe la clé privée pour provisionner Proxmox
  - echo "$ANSIBLE_PROXMOX_SSH_PRIVATE_KEY" > "$HOME/.ssh/ansible_proxmox"
  - export ANSIBLE_PROXMOX_SSH_PRIVATE_KEY_FILE="$HOME/.ssh/ansible_proxmox"
  - chmod 600 "$ANSIBLE_PROXMOX_SSH_PRIVATE_KEY_FILE"
  

  # On importe les clés de la machine créer
  # D'abord la public...
  - echo "$K8S_PROXMOX_PUBLIC_KEY" > "$HOME/.ssh/k8s_proxmox.pub"
  - export K8S_PROXMOX_PUBLIC_KEY_FILE="$HOME/.ssh/k8s_proxmox.pub"
  - chmod 644 "$K8S_PROXMOX_PUBLIC_KEY_FILE"
  
  # ensuite la privée
  - echo "$K8S_PROXMOX_PRIVATE_KEY" > "$HOME/.ssh/k8s_proxmox"
  - export K8S_PROXMOX_PRIVATE_KEY_FILE="$HOME/.ssh/k8s_proxmox"
  - chmod 600 "$K8S_PROXMOX_PRIVATE_KEY_FILE"

  # 3) Ajout du nœud Proxmox dans known_hosts (pour que le runner ne pose plus de question)
  - ssh-keyscan -p "$PROXMOX_HOST_PORT" "$PROXMOX_HOST_IP" >> ~/.ssh/known_hosts
  - ssh-keyscan -p 9101 "$PROXMOX_HOST_IP" >> ~/.ssh/known_hosts
  - echo -e "Host *\n  StrictHostKeyChecking no\n  UserKnownHostsFile=/dev/null" >> ~/.ssh/config
  - chmod 600 ~/.ssh/config

  # 4) Génère .env.local (lu par generate_inventory.sh / ansible.sh)
  - |
    cat > .env.local <<EOF
    GITLAB_API_TOKEN=$GITLAB_API_TOKEN
    PROXMOX_HOST_IP=$PROXMOX_HOST_IP
    PROXMOX_HOST_PORT=$PROXMOX_HOST_PORT
    ANSIBLE_PROXMOX_SSH_PRIVATE_KEY_FILE=$ANSIBLE_PROXMOX_SSH_PRIVATE_KEY_FILE
    K8S_PROXMOX_PUBLIC_KEY_FILE=$K8S_PROXMOX_PUBLIC_KEY_FILE
    K8S_PROXMOX_PRIVATE_KEY_FILE=$K8S_PROXMOX_PRIVATE_KEY_FILE
    K8S_API_PUBLIC_URL="https://${PROXMOX_HOST_IP}:${KUBERNETES_API_PORT}"
    EOF
  
  # Génération de l'inventaire
  - envsubst < inventory/proxmox.template.yml > inventory/proxmox.yml

provision:
  stage: provision
  script:
    - ./generate_inventory.sh
    - cat inventory/proxmox.yml
    - ./ansible.sh
  artifacts:
    untracked: false
    when: on_success
    expire_in: "1 day"
    paths:
      - dev/ansible/inventory/proxmox.yml

# YO